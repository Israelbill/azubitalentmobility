version: '3.8'

services:
  # PostgreSQL Database Service
  db:
    image: postgres:15-alpine
    container_name: todo_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: secret  # Change in production!
      POSTGRES_DB: todo
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d todo"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Node.js Backend Service
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: todo_backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      DB_USER: admin
      DB_PASSWORD: secret
      DB_NAME: todo
      DB_PORT: 5432
    ports:
      - "5000:5000"
    networks:
      - app_network
    restart: unless-stopped

  # React Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: todo_frontend
    depends_on:
      - backend
    ports:
      - "80:80"
    networks:
      - app_network
    restart: unless-stopped

# Networks and Volumes
networks:
  app_network:
    driver: bridge

volumes:
  postgres_data: